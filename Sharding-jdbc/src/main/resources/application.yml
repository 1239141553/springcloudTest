spring:
  application:
    name: client-1
server:
  port: 8001
logging:
  level:
    root: info
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8762/eureka/
---
spring:
  shardingsphere:
    props:
      sql:
        show: true    # 开启sql日志输出
    datasource: # 配置数据源
      names: springboottest0,springboottest1    # 分库的逻辑库名
      springboottest0: # 逻辑库名
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/springboottest0?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
        username: root
        password: 123
      springboottest1: # 逻辑库名
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/springboottest1?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
        username: root
        password: 123
      sharding:
        default-database-strategy:
          inline:
            algorithm-expression: springboottest$->{id % 2}
            sharding-column: id
        tables:
          t_student:
            key-generator:
              column: id
              type: SNOWFLAKE
              props:
                worker:
                  id: 19
            #分表配置
            actual-data-nodes: springboottest$->{0..1}.t_student
            # 分库策略（也可以采用默认的）
            database-strategy:
              inline:
                sharding-column: id
                algorithm-expression: springboottest$->{id % 2}
  #               #分表策略（也可以采用默认的）
  #            table-strategy:
  #              inline:
  #                sharding-column: id
  #                algorithm-expression: t_student_$->{id % 2}
  redis:
    database: 10
    host: 127.0.0.1
    port: 6379
    password: 123456
    timeout: 5000
    ssl: false
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        max-wait: -1ms
        min-idle: 0

mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    auto-mapping-behavior: full
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath*:mapper/**/*Mapper.xml
  global-config:
    # 逻辑删除配置
    db-config:
      # 删除前
      logic-not-delete-value: 1
      # 删除后
      logic-delete-value: 0

rocketmq:
  name-server: 127.0.0.1:9876
  producer:
    group: mkt-contract-producer-group
    maxMessageSize: 10485760
    send-message-timeout: 10000
  consumer:
    group: mkt-contract-consumer-group
    timeOut: 10000